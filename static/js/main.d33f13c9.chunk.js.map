{"version":3,"sources":["serviceWorker.js","component/sideBar/SideBar.js","static/data/sideBarJson.js","component/sideBar/index.js","component/explorer/Explorer.js","static/data/fileExplorerJson.js","component/explorer/index.js","component/editor/Editor.js","component/editor/index.js","component/bottom/Bottom.js","component/bottom/index.js","component/root.js","index.js"],"names":["Boolean","window","location","hostname","match","SideBar","props","imgPath","alt","className","dangerouslySetInnerHTML","__html","onClick","handleAction","SideBarParent","_handleAction","code","node","document","querySelector","getStyle","style","display","sideBarJson","map","item","index","key","sideBarDom","this","_getSideBarDom","React","PureComponent","Explorer","name","useState","toggle","value","arrow","setArrow","ExplorerParent","fileExplorerJson","explorerDom","id","Editor","userInput","setUserInput","xmlns","viewBox","width","height","fill","d","autoFocus","onChange","e","target","EditorParent","Bottom","BottomParent","RootComponent","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d33f13c9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\n\nexport const SideBar = (props) => {\n  const { imgPath = \"\", alt = \"\" } = props;\n  return (\n    <div\n      className=\"sideBarContainer__icon\"\n      dangerouslySetInnerHTML={{ __html: imgPath }}\n      onClick={props.handleAction(1)}\n    ></div>\n  );\n};\n","export default [\n  {\n    imgPath: `<span class=\"codicon codicon-files\"></span>`,\n    alt: \"Files icon\",\n  },\n  {\n    imgPath: `<span class=\"codicon codicon-search\"></span>`,\n    alt: \"search icon \",\n  },\n  {\n    imgPath: `<span class=\"codicon codicon-git-merge mergeNumber\"></span>`,\n    alt: \"Git merge icon\",\n  },\n  {\n    imgPath: `<span class=\"codicon codicon-bug\"></span>`,\n    alt: \"Debugger icon\",\n  },\n  \n  {\n    imgPath: `<span class=\"codicon codicon-extensions\"></span>`,\n    alt: \"extensions icon\",\n  },\n  {\n    imgPath: `<span class=\"codicon codicon-live-share\"></span>`,\n    alt: \"Live Share icon\",\n  },\n  {\n    imgPath: `<span class=\"codicon codicon-settings-gear\"></span>`,\n    alt: \"Setting icon\",\n  },\n];\n","import React from \"react\";\n\nimport { SideBar } from \"./SideBar\";\nimport sideBarJson from \"../../static/data/sideBarJson\";\n\nexport class SideBarParent extends React.PureComponent {\n\n  _handleAction = (code) => () =>{\n    const node =  document.querySelector('#explorerContainer');\n    const getStyle = node.style.display;\n   if(getStyle !== 'none'){\n\n    node.style.display = 'none';\n   }else {\n    node.style.display = 'block';\n   }\n  }\n  _getSideBarDom() {\n    return sideBarJson.map((item,index) => {\n      const { imgPath = \"\", alt = \"\" } = item;\n      return <SideBar imgPath={imgPath} alt={alt} key={index} handleAction={this._handleAction}/>;\n    });\n  }\n\n  render() {\n    const sideBarDom = this._getSideBarDom();\n    return <div className=\"sideBarContainer\">{sideBarDom}</div>;\n  }\n}\n","import React, { useState } from \"react\";\n\nexport const Explorer = (props) => {\n  const { name = \"\" } = props;\n  const [arrow, setArrow] = useState({\n    toggle: true,\n    value: \"codicon-chevron-right\",\n  });\n\n  const handleCollapse = () => {\n    if (arrow.toggle) {\n      setArrow({\n        toggle: false,\n        value: \"codicon-chevron-down\",\n      });\n    } else {\n      setArrow({\n        toggle: true,\n        value: \"codicon-chevron-right\",\n      });\n    }\n  };\n  return (\n    <div className=\"explorerContainer__collapse\" onClick={handleCollapse}>\n      <span className={`codicon ${arrow.value}`}></span>\n      {name}\n    </div>\n  );\n};\n","export default [\n    {\n    \n      name: `OPEN EDITORS`,\n    },\n    {\n      name: `AJIO-UI`,\n    },\n    {\n      name: `OUTLINE`,\n    }\n  ];\n  ","import React from \"react\";\n\nimport { Explorer } from \"./Explorer\";\nimport fileExplorerJson from \"../../static/data/fileExplorerJson\";\n\nexport class ExplorerParent extends React.PureComponent {\n  _getSideBarDom() {\n    return fileExplorerJson.map((item, index) => {\n      const { name = \"\" } = item;\n      return <Explorer name={name} key={index} />;\n    });\n  }\n  render() {\n    const explorerDom = this._getSideBarDom();\n    return (\n      <div className=\"explorerContainer\" id=\"explorerContainer\">\n        <div className=\"explorerContainer__header\">EXPLORER</div>\n        {explorerDom}\n      </div>\n    );\n  }\n}\n","import React, { useState } from \"react\";\n\nexport const Editor = () => {\n  let defaultValue = `import React from 'react';\n    export class BannerComponent extends React.PureComponent {\n        constructor(){\n            super();\n        }\n        render() {\n            return (\n                <div>Web VSC</div>\n            )\n        }\n    }\n    `;\n  const [userInput, setUserInput] = useState(defaultValue);\n\n  const handleInputChange = (e) => {\n    setUserInput(e.target.value);\n  };\n  return (\n    <div className=\"editorContainer__content\">\n      <div className=\"editorContainer__content--fileName\">\n        <div>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 48 48\"\n            width=\"48px\"\n            height=\"48px\"\n          >\n            <path fill=\"#ffd600\" d=\"M6,42V6h36v36H6z\" />\n            <path\n              fill=\"#000001\"\n              d=\"M29.538 32.947c.692 1.124 1.444 2.201 3.037 2.201 1.338 0 2.04-.665 2.04-1.585 0-1.101-.726-1.492-2.198-2.133l-.807-.344c-2.329-.988-3.878-2.226-3.878-4.841 0-2.41 1.845-4.244 4.728-4.244 2.053 0 3.528.711 4.592 2.573l-2.514 1.607c-.553-.988-1.151-1.377-2.078-1.377-.946 0-1.545.597-1.545 1.377 0 .964.6 1.354 1.985 1.951l.807.344C36.452 29.645 38 30.839 38 33.523 38 36.415 35.716 38 32.65 38c-2.999 0-4.702-1.505-5.65-3.368L29.538 32.947zM17.952 33.029c.506.906 1.275 1.603 2.381 1.603 1.058 0 1.667-.418 1.667-2.043V22h3.333v11.101c0 3.367-1.953 4.899-4.805 4.899-2.577 0-4.437-1.746-5.195-3.368L17.952 33.029z\"\n            />\n          </svg>\n          BannerComponent.js\n          <span className={`codicon codicon-chrome-close`}></span>\n        </div>\n        <div>\n          <span className={`codicon codicon-split-horizontal`}></span>\n          <span className={`codicon codicon-ellipsis`}></span>\n        </div>\n      </div>\n      <div className=\"editorContainer__content--edit\">\n        <div>\n          <span>1</span>\n          <span>2</span>\n          <span>3</span>\n          <span>4</span>\n          <span>5</span>\n          <span>6</span>\n          <span>7</span>\n          <span>8</span>\n          <span>9</span>\n          <span>10</span>\n          <span>11</span>\n          <span>12</span>\n          <span>13</span>\n          <span>14</span>\n          <span>15</span>\n          {/* <span>16</span>\n          <span>17</span>\n          <span>18</span>\n          <span>19</span>\n          <span>20</span> */}\n        </div>\n        <textarea\n          autoFocus={true}\n          value={userInput}\n          onChange={handleInputChange}\n        ></textarea>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { Editor } from \"./Editor\";\n\nexport class EditorParent extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"editorContainer\">\n        <Editor />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport const Bottom = () => {\n  return (\n    <div className=\"vscBottom__content\">\n      <div>\n        <div className=\"warning\">\n          <span className=\"codicon codicon-error\"></span>0\n          <span className=\"codicon codicon-warning\"></span>0\n        </div>\n        <div className=\"casey\">\n          <span className=\"codicon codicon-person\"></span> Casey\n        </div>\n        <div className=\"liveShare\">\n          <span className=\"codicon codicon-link-external\"></span> Live Share\n        </div>\n        <div className=\"azure\">\n          Azure: <div></div>\n        </div>\n      </div>\n      <div className=\"defaultContent\">\n        <span>Ln 1, Col 1 </span>\n        <span>Spaces: 2</span>\n        <span>LF</span>\n        <span>JavaScript</span>\n        <span>Layout: US</span>\n        <span className=\"codicon codicon-smiley\"></span> \n        <span className=\"codicon codicon-bell\"></span> \n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Bottom } from \"./Bottom\";\n\nexport class BottomParent extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"vscBottom\">\n        <Bottom />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport { SideBarParent } from \"./sideBar\";\nimport { ExplorerParent } from \"./explorer\";\nimport { EditorParent } from \"./editor\";\nimport { BottomParent } from \"./bottom\";\n\nexport class RootComponent extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"vscContainer\">\n        <div className=\"vscContainer__main\">\n          <SideBarParent />\n          <ExplorerParent />\n          <EditorParent />\n        </div>\n        <BottomParent />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { RootComponent } from \"./component/root\";\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RootComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}